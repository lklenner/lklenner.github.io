import"./Bg9kRutz.js";import{p as mt,c as t,s as r,r as e,t as pt,a as bt,f as Rt,k as o,D as p,j as ot}from"./Dk-3uZ7-.js";import{s as a}from"./HYwG6HKy.js";import{t as gt,a as ht}from"./MEy6nb--.js";import{s as u}from"./70hiQGY9.js";import{s as vt}from"./IvFCNWTJ.js";import{o as _t}from"./C2_p6BS0.js";import{N as Ut}from"./B4aj8M0P.js";import{n as B,y as at,e as Vt,s as n,P as $,Q as E}from"./BMnGVck3.js";import{N as ft}from"./B7_egR5Y.js";import{S as j}from"./DbW0fGoq.js";import{T as At}from"./CmRE5a5A.js";import{d as Ft}from"./Cid6_tu6.js";var Wt=gt('<div class="card mt-3 mb-3 shadow-sm"><div class="card-body"><h5 class="card-title">Corrections</h5> <p class="card-text">To correct the calculation of your remaining homeoffice allocations, you can provide a date along with the total number of working hours and the achieved homeoffice quota up to this date. Dates before the specified correction date are not considered in the calculations. To enable corrections set a date, vice versa delete the date to disable corrections.</p> <ul class="list-group mb-4"><li class="list-group-item"><div class="d-flex justify-content-between"><div><div class="fw-bold">Effective date</div> Set the date (including) for the days you want to overwrite.</div> <div class="form-check form-switch d-flex align-items-center"><input class="form-control me-1" type="date" id="quotaCorrectionDate"></div></div></li> <li class="list-group-item"><div class="d-flex justify-content-between"><div><div class="fw-bold">Quota</div> Set your homeoffice quota in decimal notation for the specified date.</div> <div class="form-check form-switch d-flex align-items-center"><input id="quotaCorrectionInput" type="number" class="form-control" placeholder="0" min="0" max="1" step="0.01" required></div></div></li> <li class="list-group-item"><div class="d-flex justify-content-between"><div><div class="fw-bold">Hours</div> Set your total number working hours for the specified date..</div> <div class="form-check form-switch d-flex align-items-center"><input id="hoursCorrectionInput" type="number" class="form-control" placeholder="0" min="0" max="3000" step="1" require=""></div></div></li></ul></div></div>');function zt(P,L){mt(L,!0);function D(){const s=document.getElementById("quotaCorrectionInput");s.reportValidity()&&(n.rune.contract.quotaCorrection.quota=parseFloat(s.value),$.modified())}function O(){const s=document.getElementById("hoursCorrectionInput");s.reportValidity()&&(n.rune.contract.quotaCorrection.workingHours=parseInt(s.value),$.modified())}function I(s){if(!s.target.value){n.rune.contract.quotaCorrection.quotaDate=null,$.modified();return}const h=s.target.value.split("-");n.rune.contract.quotaCorrection.quotaDate=new Date(h[0],h[1]-1,h[2]),$.modified()}function S(){document.getElementById("quotaCorrectionInput").value=n.rune.contract.quotaCorrection.quota,n.rune.contract.quotaCorrection.quotaDate&&(document.getElementById("quotaCorrectionDate").value=B(n.rune.contract.quotaCorrection.quotaDate,"yyyy-MM-dd")),document.getElementById("hoursCorrectionInput").value=n.rune.contract.quotaCorrection.workingHours}_t(()=>{S()});var c=Wt(),_=t(c),l=r(t(_),4),i=t(l),f=t(i),y=r(t(f),2),b=t(y);b.__change=I,e(y),e(f),e(i);var q=r(i,2),w=t(q),x=r(t(w),2),R=t(x);R.__focusout=D,e(x),e(w),e(q);var C=r(q,2),g=t(C),H=r(t(g),2),k=t(H);k.__focusout=O,e(H),e(g),e(C),e(l),e(_),e(c),pt((s,T)=>{u(b,"min",s),u(b,"max",T)},[()=>B(new Date(at.rune.yearLiteral,0),"yyyy-MM-dd"),()=>B(Vt(new Date(at.rune.yearLiteral,0)),"yyyy-MM-dd")]),ht(P,c),bt()}Ft(["change","focusout"]);var Gt=gt(`<!> <div class="container mt-3 mb-3"><div class="card mt-3 mb-3 shadow-sm clickable"><div class="card-body"><h5 class="card-title">Status</h5> <p class="card-text">Considering the time period from <b> </b> to <b> </b>.</p> <p class="card-text">You have worked a total of <b> </b> hours. You spend <b> </b> at home 
                and <b> </b> at the office. Which gives the following distribution.
                Your current homeoffice quota is <b> </b> <i> </i>.</p> <div class="progress-stacked mb-3 border"><div class="progress" role="progressbar"><div data-bs-toggle="tooltip" data-bs-placement="bottom"> </div></div> <div class="progress" role="progressbar"><div class="progress-bar office-bg svelte-1wq0gv9" data-bs-toggle="tooltip" data-bs-placement="bottom"> </div></div></div> <p class="card-text">The remaining year has <b> </b> working days left. That means, to achieve a perfect quota, you can spend another <b> </b> hours at home. This is approximately <b> </b> days.</p> <p class="card-text">You projected distribution for the rest of the year is:</p> <div class="progress-stacked mb-3 border"><div class="progress" role="progressbar"><div data-bs-toggle="tooltip" data-bs-placement="bottom"> </div></div> <div class="progress" role="progressbar"><div class="progress-bar office-bg svelte-1wq0gv9" data-bs-toggle="tooltip" data-bs-placement="bottom"> </div></div></div></div></div> <!></div>`,1);function de(P,L){mt(L,!0);let D=p(()=>n.rune.contract.quotaCorrection.quotaDate),O=p(()=>n.rune.contract.quotaCorrection.quota),I=p(()=>n.rune.contract.quotaCorrection.workingHours);const S=n.rune.contract.homeOfficeQuota,c=j.roundTo,_=v=>B(v,"dd.MM.yyyy"),l=new j(at.rune.yearLiteral,n.rune.contract.workingHours);let i=p(()=>j.collectStatistics(l.allDatesUpToToday,o(D),o(O),o(I))),f=p(()=>j.collectStatistics(l.allDatesOfYear,o(D),o(O),o(I))),y=p(()=>l.getRemainingHoursInHomeOffice(o(i)));function b(v){let d=v.home/v.total;d=isNaN(d)?0:d;const m=S-d;return m>=.1?"bg-success":m>=0?"bg-warning":"bg-danger"}function q(v){let d=v.home/v.total;d=isNaN(d)?0:d;const m=S-d;return m>=.1?"Ok":m>=0?"Ok, but close":"Overshooting"}_t(()=>{At.enable()});var w=Gt(),x=Rt(w);const R=p(()=>[ft.HomeItem(),ft.UpItem()]);Ut(x,{name:"Status",get navItems(){return o(R)}});var C=r(x,2),g=t(C),H=t(g),k=r(t(H),2),s=r(t(k)),T=t(s,!0);e(s);var h=r(s,2),yt=t(h,!0);e(h),ot(),e(k);var U=r(k,2),V=r(t(U)),qt=t(V,!0);e(V);var A=r(V,2),wt=t(A,!0);e(A);var F=r(A,2),xt=t(F,!0);e(F);var W=r(F,2),Ct=t(W);e(W);var it=r(W),st=r(it),Ht=t(st,!0);e(st),ot(),e(U);var z=r(U,2),Q=t(z),M=t(Q),kt=t(M,!0);e(M),e(Q);var G=r(Q,2),J=t(G),Dt=t(J,!0);e(J),e(G),e(z);var K=r(z,2),X=r(t(K)),Ot=t(X,!0);e(X);var Z=r(X,2),It=t(Z,!0);e(Z);var nt=r(Z,2),St=t(nt,!0);e(nt),ot(),e(K);var ct=r(K,4),Y=t(ct),N=t(Y),Tt=t(N,!0);e(N),e(Y);var tt=r(Y,2),et=t(tt),Qt=t(et,!0);e(et),e(tt),e(ct),e(H),e(g);var Mt=r(g,2);zt(Mt,{}),e(C),pt((v,d,m,Yt,Nt,rt,$t,Et,dt,jt,Bt,Pt,lt,Lt,ut)=>{a(T,v),a(yt,d),a(qt,m),a(wt,Yt),a(xt,Nt),a(Ct,`${rt??""}%`),a(it,` with a limit at ${n.rune.contract.homeOfficeQuota*100}%, therefore you are `),a(Ht,$t),u(Q,"style",`width: ${rt??""}%;`),vt(M,1,`progress-bar ${Et??""}`,"svelte-1wq0gv9"),u(M,"data-bs-title",`Homeoffice quota: ${rt??""}%`),a(kt,E.Home),u(G,"style",`width: ${dt??""}%;`),u(J,"data-bs-title",`Office: ${dt??""}%`),a(Dt,E.Office),a(Ot,jt),a(It,Bt),a(St,Pt),u(Y,"style",`width: ${lt??""}%;`),vt(N,1,`progress-bar ${Lt??""}`,"svelte-1wq0gv9"),u(N,"data-bs-title",`Homeoffice quota: ${lt??""}%`),a(Tt,E.Home),u(tt,"style",`width: ${ut??""}%;`),u(et,"data-bs-title",`Office: ${ut??""}%`),a(Qt,E.Office)},[()=>_(l.startOfYear),()=>_(l.todayOrEndOfYear),()=>c(o(i).total,2),()=>c(o(i).home,2),()=>c(o(i).office,2),()=>c(o(i).home/o(i).total,4)*100,()=>q(o(i)),()=>b(o(i)),()=>c(o(i).office/o(i).total,4)*100,()=>l.getRemainingAccountableDatesOfYear().length,()=>c(o(y),2),()=>c(o(y)/l.hPd),()=>c(o(f).home/o(f).total,4)*100,()=>b(o(f)),()=>c(o(f).office/o(f).total,4)*100]),ht(P,w),bt()}export{de as S};
